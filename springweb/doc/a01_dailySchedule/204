# 주요학습범위
1. 데이터 베이스 설정과 활용 dao작성
2. on promise 개발 환경
# 생각해봅시다.
1. 동적 쿼리란 무엇인가?
	조건이나 반복문에 의해서 sql 처리 구문이 변경되는 것을 말한다.
	예를들어 사원번호가 없을 때는 전체 사원정보를 출력하게끔 처리할 때를 말한다.
	보통, 이러한 동적 쿼리는 mybatis에서 사용하는 ognl 방식(jstl)으로 
	조건문을 활용하여 처리하는 것을 말한다.

2. 웹 개발 환경은 어떻게 구축되어 있을까? 
	개발 환경
		개발자가 eclipse/툴 설치 개인 pc를 통해 개발 DB서버에 접속하여
		프로그래밍을 개발하는 환경을 말한다.
	테스트 환경
		공통된 svn, git 서버를 만들어 개발환경을 통해서 만들어진 소스를 특정 서버(svn/git)에
		올려서, bulding(컴파일)을 하여 테스트 was(tomcat/jeuse/weblogic 등)에 올려서 처리하는
		것을 말한다.		
		- 개발 서버 : 개발 DB서버, 개발 WAS서버, svn/git, 빌딩도구(젠킨스)
		- 테스트1 서버 : 테스트1 DB서버, 테스트1 WAS서버, svn, 빌딩도구(젠킨스)
		- 테스트2 서버 : 테스트2 DB서버, 테스트2 WAS서버, svn, 빌딩도구(젠킨스)		
	운영 환경
		- 운영 서버 : 운영 DB서버, 운영 WAS서버, svn/git(최종소스), 빌딩도구

# 학습목표
1. 스프링의 mybatis dao와 xml연결 구조를 알고 사용할 수 있다.

2. 개발 환경을 이해하고 구축할 수 있다.
 	
# 주요핵심 keyword


# 주요 진행계획(학습 단계별 체계화)
1. 전체 핵심 내용을 이해하고, 간단한 코드로 확인한다.
2. 각 내용을 내용 계열화를 통해 연관되어 이해를 한다.
3. 세부 내용을 기능 메서드의 기능을 확인하고 진행한다.
4. 9:10 전날 내용 리뷰
5. 16시 - 질문사항, 일일 과제진행, 보강(DI)
	과제 올리고,  파이썬16:15 시작하겠습니다.


6. 17시 - 조별과제 진행 회의, 내일 발표, 2/4(금)

# 추후 일정
1. 서버 구축
	1) 프로미스 환경 서버 구축
		고정 ip 설정
		웹서버, DB 서버, svn 서버
	2) 클라우드 환경 서버 구축
		aws
2. 프런트 단 : vue
3. 스프링 수업
	- dynamic web project : 스프링 환경
	- 스프링 boot	

# 프로젝트 관련 결정
1. 5주, 1주일 휴식
	1/24(월) ~ 3/4(월) 4차 프로젝트.
	1/31~2/4 : 복습 및 자율 학습

# 전달된 피드백 사항.
1. 
	
# 과제
고정ip:5000~7000
	clean ip
테스트 : 고정ip가 있는 곳에서 웹서버를 기동 후,
	외부에서 고정ip에 의해서 화면이 출력되는지 여부만 확인..
	
0. vpn이나 다른 고정 ip가 설치가 되고 기동 된 상황에서 웹서버가
	외부에서 접근 되는 상황에서 가능합니다.	
	http://106.10.23.227:7080/springweb/empList.do
	특정 서버
	
1. DB 서버, 방화벽 : DB서버 공유
    고정 IP가 있는 곳에 방화벽설정을 열어두고, db서버로 접속되는지 확인한다.

2. svn 서버/git서버 선택 : 소스 공유
	고정 ip가 있는 곳에서 설정..
		구글에서 visual svn server 설치 검색해서 다운로드 설치	
		프로젝트로 dynamic web project를 만들기.
		---------------------------------------------
	
	https://고정아이피주소/svn/webprj2/
		조원들한테 메시지로 전달.
	
	https://106.10.23.227/svn/webprj
		
		
	
	dynamic webproject 생성.
	- team ==> share project
		==> 마지막에 commit 처리.
	
	다른 조원들은 공유된 프로젝트를 import하여 가져오면 된다.
	
	
3. 웹서버 공유














# 조별과제 진행 점검
1. 





1. 공통 feeback사항
	1) 발표시 가독성 있는 크기로 설정.
	2) 일정 : 화면 설계 FRONT구현 ==> BACK구현
	3) 데이터 : 숫자형(천단위 콤마) ppt자료 및 코드( <fmt: 활용 )	
	4) 화면 구현 : 왼쪽 - 구현화면, 오른쪽 - 핵심코드,sql
	5) 진행 플로우 점검
		- 전체
		- 주단위
			전주(금) - 다음 주 진행할 일정계획 및 담당자 확인,
					  발표 feedback 사항 및 변경 및 개선사항 정리
					  진행에 필요한 내용 점검(조장/조원), 진행 계획 수립
			월 - 개선사항 적용 템플릿 점검(조별활동시간)
				text로 개선사항 내용과 함께 ppt의 페이지를 표기해서 전달 부탁드립니다.
				
				
						
			화 - 조별 상세 피드백(설계, 코드, 발표 자료 등)
		    수 - 조별 상세 피드백(설계, 코드, 발표 자료 등)
		    목 - 최종 발표 및 산출물(소스 및 진행 내용) 자료 제출
		    금 - 발표
# 개념 및 원리이해/실습(진도)

# 평가/정리(15:40)
