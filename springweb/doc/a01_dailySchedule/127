# 지난 시간 주요 질문내용
3번 7번 풀이

# 주요학습범위
1. 스프링 DI 연습 (namespace)
2. 스프링 autowire 설정(소스상 autowiring 처리)
3. 스프링 컨테이너 적용하기

# 생각해봅시다.
1. 스프링 컨테이너를 통해 자동적으로 객체를 로딩하면 어떠한 면에서 효율적일까? 
	1) 객체의 로딩 속도
	2) 자동 연관 관계 설정
	3) 특정 객체에 대한 속성 활용을 전체적으로 처리 가능
	4) 공통 설정 - message처리, 다국어 처리, 서버 단위 configuration
	5) batch 프로그램 - 특정한 주기적으로 프로그램에 처리될 내용을 처리 
2. 개발 소스에 DI 선언은 어떤 방식으로 할까? 
	1) dispatcher-servlet.xml 공통 설정에 대한 객체나 필요 공통 처리에 대한 메모리 로딩
	2) controller/service/dao에 대한 설정으로 소스상에서 autowiring하면
		더 효과적으로 프로그램 할 수 있는 상황이 발생한다.
	
# 학습목표
1. 객체형 컨테이너의 설정 방법을 알고, 활용할 수 있다.
2. 
 	
# 주요핵심 keyword


# 주요 진행계획(학습 단계별 체계화)
1. 전체 핵심 내용을 이해하고, 간단한 코드로 확인한다.
2. 각 내용을 내용 계열화를 통해 연관되어 이해를 한다.
3. 세부 내용을 기능 메서드의 기능을 확인하고 진행한다.

5. 16시 - 질문사항, 일일 과제진행
6. 17시 - 조별과제 진행 회의, 내일 2개조 발표, 2/4(금)

# 추후 일정
1. 서버 구축
	1) 프로미스 환경 서버 구축
		고정 ip 설정
		웹서버, DB 서버, svn 서버
	2) 클라우드 환경 서버 구축
		aws
2. 프런트 단 : vue
3. 스프링 수업
		- dynamic web project : 스프링 환경
		- 스프링 boot	

# 프로젝트 관련 결정
1. 5주, 1주일 휴식
	1/24(월) ~ 3/4(월) 4차 프로젝트.
	1/31~2/4 : 복습 및 자율 학습

# 전달된 피드백 사항.
1. text 내용과 함께, 각 항목별로 표기하여 ppt자료 + 텍스트형식(결과처리)
	패드백 사항.
	==> @@ 처리 및 ppt의 적용 페이지 표기.
	화요일 마치기 전, 늦어도 수요일 오전까지 전달 부탁드립니다.
	

	














# 조별과제 진행 점검
1. 4차 





1. 공통 feeback사항
	1) 발표시 가독성 있는 크기로 설정.
	2) 일정 : 화면 설계 FRONT구현 ==> BACK구현
	3) 데이터 : 숫자형(천단위 콤마) ppt자료 및 코드( <fmt: 활용 )	
	4) 화면 구현 : 왼쪽 - 구현화면, 오른쪽 - 핵심코드,sql
	5) 진행 플로우 점검
		- 전체
		- 주단위
			전주(금) - 다음 주 진행할 일정계획 및 담당자 확인,
					  발표 feedback 사항 및 변경 및 개선사항 정리
					  진행에 필요한 내용 점검(조장/조원), 진행 계획 수립
			월 - 개선사항 적용 템플릿 점검(조별활동시간)
				text로 개선사항 내용과 함께 ppt의 페이지를 표기해서 전달 부탁드립니다.
				
				
						
			화 - 조별 상세 피드백(설계, 코드, 발표 자료 등)
		    수 - 조별 상세 피드백(설계, 코드, 발표 자료 등)
		    목 - 최종 발표 및 산출물(소스 및 진행 내용) 자료 제출
		    금 - 발표
# 개념 및 원리이해/실습(진도)

# 평가/정리(15:40)
